# Use postgres/example user/password credentials

version: "3.8"
services:

  db:
    image: postgres
    container_name: retal_store_pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - rental-network
    volumes:
      - ./rental-store-back/database-script/init-structure.sql:/docker-entrypoint-initdb.d/1_structure.sql
      - ./rental-store-back/database-script/init-data.sql:/docker-entrypoint-initdb.d/2_data.sql

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_API_CORS_ALLOW_ORIGIN: "*"
    networks:
      - rental-network
    volumes:
      - ./book-cover:/rental-store/book-cover
      - ./rental-store-back/minio/entrypoint.sh:/entrypoint.sh
    entrypoint: ["sh","/entrypoint.sh"]


  rental-store-back:
    container_name: rental-store-back-server
    build:
      context: .
      dockerfile: ./rental-store-back/Dockerfile
    image: rental-store-back:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - db
      - minio
    ports:
      - 8080:8080
    networks:
      - rental-network


  rental-store-front:
    container_name: rental-store-front
    build:
      context: ./rental-store-front
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_ENDPOINT: http://localhost:8080
        NEXT_PUBLIC_LOGIN_ENDPOINT: http://rental-store-back:8080
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXTAUTH_SECRET: CausetherebenosunlightIfIloseyoubabyTherellbenoclearskiesIfIloseyoubaby
      NEXTAUTH_URL: http://localhost:3000
      NEXT_PUBLIC_API_ENDPOINT: http://localhost:8080
      NEXT_PUBLIC_LOGIN_ENDPOINT: http://rental-store-back:8080
    # volumes:
    #   - .env.production:/app/.env.production
    #   - ./rental-store-front:/app
    #   - /app/node_modules
    networks:
      - rental-network
  

networks:
  rental-network:
    driver: bridge